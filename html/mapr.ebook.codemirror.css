/**** START BASICS -- This section comes from the default https://codemirror.net/lib/codemirror.css ****/

.CodeMirror {
  /* Set height, width, borders, and global font properties here */
  font-family: monospace;
  height: 300px;
}

/* PADDING */

.CodeMirror-lines {
  padding: 4px 0; /* Vertical padding around content */
}
.CodeMirror pre {
  padding: 0 4px; /* Horizontal padding of content */
}

.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  background-color: white; /* The little square between H and V scrollbars */
}

/* GUTTER */

.CodeMirror-gutters {
  white-space: nowrap;
}
.CodeMirror-linenumbers {}
.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  white-space: nowrap;
}

/* CURSOR */

.CodeMirror-cursor {
  border-left: 1px solid black;
  border-right: none;
  width: 0;
}
/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 1px solid silver;
}
.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0;
  background: #7e7;
}
.cm-fat-cursor div.CodeMirror-cursors {
  z-index: 1;
}

.cm-animate-fat-cursor {
  width: auto;
  border: 0;
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: #7e7;
}
@-moz-keyframes blink {
  0% {}
  50% { background-color: transparent; }
  100% {}
}
@-webkit-keyframes blink {
  0% {}
  50% { background-color: transparent; }
  100% {}
}
@keyframes blink {
  0% {}
  50% { background-color: transparent; }
  100% {}
}

/* Can style cursor different in overwrite (non-insert) mode */
.CodeMirror-overwrite .CodeMirror-cursor {}

.cm-tab { display: inline-block; text-decoration: inherit; }

.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  position: absolute;
}

.CodeMirror-composing { border-bottom: 2px solid; }

/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */

.CodeMirror {
  position: relative;
  overflow: hidden;
}

.CodeMirror-scroll {
  overflow: scroll !important; /* Things will break if this is overridden */
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -30px; margin-right: -30px;
  padding-bottom: 30px;
  height: 100%;
  outline: none; /* Prevent dragging from highlighting the element */
  position: relative;
}
.CodeMirror-sizer {
  position: relative;
  border-right: 30px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actuall scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
}
.CodeMirror-vscrollbar {
  right: 0; top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}
.CodeMirror-hscrollbar {
  bottom: 0; left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
  right: 0; bottom: 0;
}
.CodeMirror-gutter-filler {
  left: 0; bottom: 0;
}

.CodeMirror-gutters {
  position: absolute; left: 0; top: 0;
  z-index: 3;
}
.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  display: inline-block;
  margin-bottom: -30px;
  /* Hack to make IE7 behave */
  *zoom:1;
  *display:inline;
}
.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important;
}
.CodeMirror-gutter-background {
  position: absolute;
  top: 0; bottom: 0;
  z-index: 4;
}
.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4;
}
.CodeMirror-gutter-wrapper {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

.CodeMirror-lines {
  cursor: text;
  min-height: 1px; /* prevents collapsing before first draw */
}
.CodeMirror pre {
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
  -webkit-tap-highlight-color: transparent;
}
.CodeMirror-wrap pre {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal;
}

.CodeMirror-linebackground {
  position: absolute;
  left: 0; right: 0; top: 0; bottom: 0;
  z-index: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  overflow: auto;
}

.CodeMirror-widget {}

.CodeMirror-code {
  outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

.CodeMirror-cursor { position: absolute; }
.CodeMirror-measure pre { position: static; }

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3;
}
div.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-selected { background: #d9d9d9; }
.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }
.CodeMirror-crosshair { cursor: crosshair; }
.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }
.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }

.cm-searching {
  background: #ffa;
  background: rgba(255, 255, 0, .4);
}

/* IE7 hack to prevent it from returning funny offsetTops on the spans */
.CodeMirror span { *vertical-align: text-bottom; }

/* Used to force a border model for a node */
.cm-force-border { padding-right: .1px; }

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}

/* See issue #2901 */
.cm-tab-wrap-hack:after { content: ''; }

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext { background: none; }
/**** END BASICS *****/



/**** START MAPR - custom code mirror highlighting *****/
/* Start Thebe formatting */
.thebe-spinner-three-bounce.thebe-spinner {margin:0 auto;text-align:center}
.thebe-spinner-three-bounce div {width:10px;height:10px;background-color:#333;border-radius:100%;display:inline-block;-webkit-animation:thebe-threeBounceDelay 1.4s infinite ease-in-out;animation:thebe-threeBounceDelay 1.4s infinite ease-in-out;-webkit-animation-fill-mode:both;animation-fill-mode:both}
.thebe-spinner-three-bounce div:nth-child(1) {-webkit-animation-delay:-0.3s;animation-delay:-0.3s}
.thebe-spinner-three-bounce div:nth-child(2) {-webkit-animation-delay:-0.16s;animation-delay:-0.16s}
@-webkit-keyframes thebe-threeBounceDelay {0%,80%,100% {-webkit-transform:scale(0);transform:scale(0)}
40% {-webkit-transform:scale(1);transform:scale(1)}
}
@keyframes thebe-threeBounceDelay {0%,80%,100% {-webkit-transform:scale(0);transform:scale(0)}
40% {-webkit-transform:scale(1);transform:scale(1)}
}
.thebe-spinner { float:right; padding-left:10px }

.thebe_wrap { max-width: 800px !important; box-sizing: padding-box; margin: auto; margin-bottom: 4.5em !important }
.thebe_controls { position: relative; bottom: 0; text-align: right; z-index: 100; pointer-events: none; margin: -3.1875rem 0 0; margin-bottom: -3em !important; }
.thebe_controls button { pointer-events: initial; margin: .45rem .625rem .625rem 0; background-color: #a1a1a1; color: #fff; outline: 0; padding: .5rem 1.25rem .5rem; border-style: outset; cursor: pointer; }
/*
div.thebe_controls button {
  border: none;
  background-color: #1995DC;
}
*/

div.input_prompt { display: none; }
.code_cell .thebe_controls { position: relative; bottom: 0; text-align: right; z-index: 100; pointer-events: none; margin: -3.1875rem 0 0; }
.code_cell .output_wrapper .output_prompt { display: none; }
.code_cell .output_wrapper { position: relative; }
.code_cell .output_wrapper .output_result { padding: .625rem 1.25rem 1.25rem; }
.output_wrapper { background-color: #f5f5f5; }
.output_wrapper .output_subarea { padding-bottom: 2.5rem; }
.code_cell .output_wrapper pre { line-height: 1.6em; color: #626262; background-color: #f5f5f5; margin: 0; float: none; }
div.input_area .CodeMirror {height:auto !important}
/* End Start Thebe formatting */

/* Top Level CodeMirror CSS */
.CodeMirror { background-color: #3c3c3c; color: #ffffec; }
.CodeMirror-selected { background-color: #716C62; }
.CodeMirror-code { line-height: 1.7em; !important; padding: 5px 0 5px 10px; }
.CodeMirror-matchingtag { background: rgba(255, 255, 255, .37); }
.CodeMirror-activeline-background { background-color: #343600; }
.CodeMirror-matchingbracket { text-decoration: underline; color: white; }

/* Gutter Formatting */
.CodeMirror-gutters { border-right: 0px; }
.CodeMirror-gutter { background-color: #1995dc; display:inline-block; margin-bottom:-30px; *zoom:1; *display:inline}
.CodeMirror-guttermarker { color: #f2777a; }
.CodeMirror-guttermarker-subtle { color: #777; }
.CodeMirror-gutter-wrapper { height:100%; }
.CodeMirror-gutter-elt { padding-right: 20px; }
.CodeMirror-linenumber { color: #3c3c3c; }

/* Syntax coloring */
.cm-comment { color: #d27b53; }
.cm-atom { color: #a16a94; }
.cm-number { color: #a16a94; }
.cm-property { color: #99cc99; }
.cm-attribute { color: #99cc99; }
.cm-keyword { color: #f2777a; }
.cm-string { color: #ffcc66; }
.cm-variable { color: #99cc99; }
.cm-variable-2 { color: #6699cc; }
.cm-def { color: #f99157; }
.cm-bracket { color: #CCCCCC; }
.cm-tag { color: #f2777a; }
.cm-link { color: #a16a94; text-decoration: underline; }

/* DEFAULT THEME */
.cm-header { color: blue; }
.cm-quote { color: #090; }
.cm-negative { color: #d44; }
.cm-positive { color: #292; }
.cm-header, .cm-strong { font-weight: bold; }
.cm-em { font-style: italic; }
.cm-strikethrough { text-decoration: line-through; }
.cm-punctuation,
.cm-property,
.cm-operator {}
.cm-variable-3 { color: #085; }
.cm-string-2 { color: #f50; }
.cm-meta { color: #555; }
.cm-qualifier { color: #6699cc; }
.cm-builtin { color: #00a8c6; }
.cm-hr { color: #999; }
.cm-error { color: #f00; }
.cm-invalidchar { color: #f00; }
